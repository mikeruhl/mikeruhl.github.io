{"componentChunkName":"component---src-templates-blog-post-js","path":"/cronos-asp-net-core-application/","result":{"data":{"site":{"siteMetadata":{"title":"Mike Ruhl's Dev Dream Journal"}},"markdownRemark":{"id":"38caab0d-236c-5748-be61-a6878a21cc15","excerpt":"I wrote an asp.net core application. It’s live at https://cronos.frenetik.io. It is an app that helps you create a chronological playlist based on an artist for…","html":"<p>I wrote an asp.net core application. It’s live at <a href=\"https://cronos.frenetik.io\">https://cronos.frenetik.io</a>. It is an app that helps you create a chronological playlist based on an artist for Spotify. The source is up at <a href=\"https://github.com/mikeruhl/cronos\">https://github.com/mikeruhl/cronos</a>. I won’t go into much detail here since the readme covers a lot on github.</p>\n<p>Just some backstory: A friend had posted a request on facebook that Spotify should offer this ability. I figured it would be a fun project so I started working on it in spare time. 1 month later, I had a working application. The process went very smooth due to a library I found at <a href=\"https://github.com/dotnetfan/FluentSpotifyApi\">https://github.com/dotnetfan/FluentSpotifyApi</a>. It’s very well written and I really appreciate the work that went into it. I had started futzing around with a proof of concept using RestSharp when I figured someone else had already done the dirty work. Sure enough, this great library fell into my lap after a quick google search.</p>\n<p>You’ll see from the source, I put some boilerplate session handling in <code class=\"language-text\">CronosBaseController.cs</code>. I liked the way that turned out, even though I didn’t use it for any other controllers. I’m getting into the habit of hiding code that won’t change and is on a different scope from the rest. I found it easier to work in <code class=\"language-text\">HomeController.cs</code> without that session code.</p>\n<p>The code could use some refactoring. It also needs tests. I released it in a beta sense, and based on the fanfare (avg 1 user per day) I can guess it’s not going to get much use. So I’ll leave it where it stands and move on to the next project.</p>","frontmatter":{"title":"Cronos - ASP.NET Core Application","date":"March 28, 2018","description":"import from previous blog."}}},"pageContext":{"slug":"/cronos-asp-net-core-application/","previous":{"fields":{"slug":"/countdown/"},"frontmatter":{"title":"Countdown!"}},"next":{"fields":{"slug":"/the-beginning-and-the-end-of-async-web-services/"},"frontmatter":{"title":"The Beginning and the End of Async Web Services"}}}},"staticQueryHashes":["1246554614","2841359383"]}